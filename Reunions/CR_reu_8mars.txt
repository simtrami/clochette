-”Paul Tag”, pour méthode d’impression des tickets: programme en Go pour Epson. Les commandes on l’air de dépendre des imprimantes, a voir au cas par cas. Voir si le bar peut racheter un tiroir-caisse que l’on choisirait. Pour l’instant, on a une CASIO SE400.

-Base de données: Francois a plus ou moins fini de la construire. 3 tables: compte (id, pseudo, solde, surnom, intronisé…), commandes (date, id_compte, id_article), article, peut-etre une quatrième, stock. Utilisation de MySQL pour la prod pour l’instant. 
A faire:
Séparer gestion des stocks et gestion du prix. Par exemple le prix peut changer…
Essayer de faire un diagramme UML.
Comment voir si la base de données est fonctionnelle (d’où le diagramme UML, pour mieux visualiser). Essayer avec des données de test, par exemple en récupérant des factures du bar. Voir avec php MyAdmin pour tester avec des données réelles.  
La base de données doit etre bien construite, si on veut y rajouter des choses après.
Problème d’encodage des accents, cédilles,… : tester avec PHP MyAdmin, il peut y avoir des problèmes d’encodage dans la console. 
Dans Symfony: on peut plug des bases de données, ou générer directement les tables a partir de Symfony, avec Doctrine. On peut utiliser directement Doctrine pour faire des requêtes sur la base. Plus automatique, pas de SQL. 
On peut construire une base données de test en ligne de commande avec Symfony. (permet de tester le code de l’appli en même temps. Cf la base de données Symfony)

-Par rapport au paiement par carte Maisel: on pourrait sinon acheter des cartes RFID pour le bar. Bien, si on donne aussi un code permettant d’utiliser cette carte. Sauf qu’on s’approche du principe d’une carte bleue, peu d’utilité. On peut garder cette idée uniquement pour les membres du bar qui valident les commandes. 

A faire dans la prochaine période: 

Faire un plan en gros du projet, ce qu’il y a a faire…
Continuer a creuser sur la caisse
Continuer tuto sur Symfony, Doctrine. Regarder la doc Symfony en plus des tuto. 
Créer base de données en ligne de commande, avec ébauche d’appli, les tester. 
Faire des tests sur la base de données. Comparer le fonctionement avec Doctrine. 
